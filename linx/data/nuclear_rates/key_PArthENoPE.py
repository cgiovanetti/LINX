import jax.numpy as jnp 
from jax import lax

##############################################
# Functions of temperature                   #
##############################################

def T913(T9):
    return T9**(1/3)
def T923(T9):
    return T913(T9)**2
def T943(T9):
    return T923(T9)**2
def T953(T9):
    return T9*T923(T9)
def T973(T9):
    return T953(T9)*T923(T9)
def T983(T9):
    return T953(T9)*T9
def T9103(T9):
    return T973(T9)*T9
def T9113(T9):
    return T9103(T9)*T913(T9)
def T9133(T9):
    return T9113(T9)*T923(T9)
def T9143(T9):
    return T9133(T9)*T913(T9)
def T9163(T9):
    return T9133(T9)*T9
def T9173(T9):
    return T9163(T9)*T913(T9)
def T9193(T9):
    return T9173(T9)*T923(T9)
def T912(T9):
    return jnp.sqrt(T9)
def T932(T9):
    return T9*T912(T9)
def T952(T9):
    return T932(T9)*T9
def T972(T9):
    return T952(T9)*T9
def T992(T9):
    return T972(T9)*T9
def T9112(T9):
    return T992(T9)*T9
def T9132(T9):
    return T9112(T9)*T9
def T9152(T9):
    return T9132(T9)*T9
def T9m1(T9):
    return 1/T9
def T9m13(T9):
    return 1/T913(T9)
def T9m23(T9):
    return 1/T923(T9)
def T9m12(T9):
    return 1/T912(T9)
def T9m32(T9):
    return 1/T932(T9)
def T9a(T9):
    return T9/(1+13.076*T9)
def T9a32(T9):
    return T9a(T9)**(3/2)
def T9b(T9):
    return T9/(1+49.18*T9)
def T9b32(T9):
    return T9b(T9)**(3/2)


# n + p --> d + g, Serpico 2004
def npdg_frwrd_rate(T, p):

    T9 = T*1e-9

    def low_rate(T9): 
        #T9 <= 1.5

        f = 44060. * (
            1. - 2.7503695564153143 * T9 
            - 3.5220409333117897 * T9**2 - 0.2093513619089196 * T9**3 
            + 0.10659679579058313 * T912(T9) + 4.62948586627009 * T932(T9) 
            + 1.3459574632779876 * T952(T9)
        )

        df = 67.95212182165885 * jnp.sqrt(
            1.255364135304537 + 618.8966688079934*T9 
            + 21793.605102078516 * T9**2 
            + 97573.42092925594 * T9**3 + 85539.62453206794 * T9**4 
            + 14687.125326371255 * T9**5 + 247.57751149254238 * T9**6 
            - 2855.9302137640752 * T9112(T9) - 25.82889427679147 * T912(T9) 
            - 5043.279674275595 * T932(T9) - 57307.155278753264 * T952(T9) 
            - 111071.90152148822 * T972(T9) - 44154.571125115704 * T992(T9)
        )

        return f, df

    def high_rate(T9): 

        f = 4.742e4 * (
            1. - .8504*T912(T9) + .4895*T9 - .09623*T932(T9)
            + 8.471e-3*T9**2 - 2.80e-4*T952(T9)
        )

        return f, 0.078*f 

    f, df = lax.cond(T9 <= 1.5, low_rate, high_rate, T9)
    expsigma = 1. + df/f 
    
    return f * jnp.exp(p * jnp.log(expsigma))

# d + p --> He3 + g, Pisanti 2020 arxiv:2011.11537

# some weirdness at low temperatures, please check
def dpHe3g_frwrd_rate(T, p):
    
    T9 = T * 1e-9

    def low_rate(T9): 
        # T9 <= 4. 

        f = T9m23(T9) * (
                - 6.194453277203594 + 22171.926490994258 * T9
                - 812513.0306179419 * T9**2 + 1.7722520963024362e6 * T9**3
                - 368351.0375876271 * T9**4 + 5275.48295368989 * T9**5
                - 1.3641334338787347e6 * T9103(T9)
                + 810606.1958071451 * T9113(T9)
                + 201.7432760051548 * T913(T9)
                + 125602.00856877993 * T9133(T9)
                - 31095.323648099842 * T9143(T9)
                - 548.4032679748573 * T9163(T9)
                + 26.334040198363052 * T9173(T9)
                - 2817.4051296076195 * T923(T9)
                - 109072.97636789024 * T943(T9)
                + 355668.0024142403 * T953(T9)
                + 1.3796464841892694e6 * T973(T9)
                - 1.7815928451228556e6 * T983(T9)
            ) / jnp.exp(1.29042942 * T9m13(T9)) 
        
        fp = T9m23(T9) * (
            - 2.6703059325264484 + 13244.37219953217 * T9
            - 434602.9565597139 * T9**2 + 633398.9523744078 * T9**3
            - 60428.796285877674 * T9**4 + 110.22914339351317 * T9**5
            - 398185.74145106773 * T9103(T9) 
            + 183727.33326277588 * T9113(T9)
            + 103.19823960924714 * T913(T9) + 13409.7312116957 * T9133(T9)
            - 1799.1783726456658 * T9143(T9) - 1597.1426434352331 * T923(T9)
            - 65649.67419229684 * T943(T9) + 206135.95747657356 * T953(T9)
            + 663735.6949855759 * T973(T9) - 750238.7765562678 * T983(T9)
        ) / jnp.exp(1.29042942 * T9m13(T9))

        return f, fp
        
    def high_rate(T9):
        f = 2113.16
        fp = 2178.67

        return f, fp

    f,fp = lax.cond(T9 <= 4., low_rate, high_rate, T9)

    expsigma = fp/f 

    return f * jnp.exp(p * jnp.log(expsigma))

# d + d --> He3 + n, Pisanti 2020 arxiv:2011.11537

def ddHe3n_frwrd_rate(T, p):

    T9 = T*1e-9
    
    def low_rate(T9):
    # T9 <= 4.
        
        f = (
            321296.9948970247 - 1.9180215905621612e9*T9
            + 1.3881096257595047e11*T9**2
            - 5.289640171653128e11*T9**3 + 1.719654390000693e11*T9**4
            - 3.699206623147024e9*T9**5 + 4.760387471479396e11*T9103(T9)
            - 3.2811985153873035e11*T9113(T9) - 1.2209299424235549e7*T913(T9)
            - 6.734692924560129e10*T9133(T9)
            + 1.9089695890090744e10*T9143(T9) + 4.384049981959462e8*T9163(T9)
            - 2.396477962456513e7*T9173(T9) + 2.018310465362159e8*T923(T9)
            + 1.1672167355300453e10*T943(T9) - 4.807140317985709e10*T953(T9)
            - 2.8968459770013477e11*T973(T9) + 4.496605591595117e11*T983(T9)
        ) * T9m23(T9) / jnp.exp(T9m13(T9))

        fp = (
            324509.96470113087-1.937201805966554e9*T9+
            1.40199072171838e11*T9**2-5.3425365720533984e11*T9**3+
            1.7368509333437854e11*T9**4-3.736198687778469e9*T9**5+
            4.807991344908736e11*T9103(T9)-
            3.3140104995728906e11*T9113(T9)-1.2331392412242804e7*T913(T9)-
            6.802039851406439e10*T9133(T9)+
            1.9280592841500507e10*T9143(T9)+
            4.4278904796883184e8*T9163(T9) - 2.420442740820764e7*T9173(T9) +
            2.0384935694489682e8*T923(T9)+1.1788889026117342e10*T943(T9)-
            4.855211720111187e10*T953(T9)-2.925814436133358e11*T973(T9)+
            4.54157164646803e11*T983(T9)
        ) * T9m23(T9) / jnp.exp(T9m13(T9))

        return f, fp

    def high_rate(T9):
        
        f=5.02027e7
        fp=5.07047e7

        return f, fp
    
    f, fp = lax.cond(T9 <= 4., low_rate, high_rate, T9)

    expsigma = fp/f

    return f * jnp.exp(p * jnp.log(expsigma))

# d + d --> t + p, Pisanti 2020 arxiv:2011.11537
def ddtp_frwrd_rate(T, p):

    T9 = T*1e-9
    
    def low_rate(T9): 
    # T9 <= 4.

        f = (
            344771.39066679927 - 2.1068827419353156e9*T9
            + 1.565621182899997e11*T9**2 - 6.085012672776245e11*T9**3
            + 1.9970133506639343e11*T9**4 - 4.320369220422077e9*T9**5
            + 5.4972593314086273e11*T9103(T9)
            - 3.8007648756248285e11*T9113(T9) - 1.3201397617111376e7*T913(T9)
            - 7.837778110396318e10*T9133(T9)
            + 2.2258122388142662e10*T9143(T9)
            + 5.1278962480559975e8*T9163(T9) - 2.8069295382999137e7*T9173(T9)
            + 2.1992915636979988e8*T923(T9) + 1.2930592352633339e10*T943(T9)
            - 5.3731389712860016e10*T953(T9) - 3.294384822438947e11*T973(T9)
            + 5.147142897092518e11*T983(T9)
        ) * T9m23(T9) / jnp.exp(T9m13(T9))

        fp = (
            348219.1045496517 - 2.1279515692849133e9*T9
            + 1.581277394695097e11*T9**2 - 6.145862799382203e11*T9**3
            + 2.016983484128864e11*T9**4 - 4.363572912529403e9*T9**5
            + 5.552231924611802e11*T9103(T9)
            - 3.8387725243032263e11*T9113(T9) - 1.3333411592163663e7*T913(T9)
            - 7.91615589133291e10*T9133(T9) + 2.2480703611537277e10*T9143(T9)
            + 5.1791752104185057e8*T9163(T9) - 2.8349988336165372e7*T9173(T9)
            + 2.221284479263768e8*T923(T9) + 1.305989827580598e10*T943(T9)
            - 5.426870360871224e10*T953(T9) - 3.3273286705956134e11*T973(T9)
            + 5.198614325960014e11*T983(T9)
        ) * T9m23(T9) / jnp.exp(T9m13(T9))

        return f, fp

    def high_rate(T9):

        f = 4.16618e7
        fp = 4.20784e7

        return f, fp
    
    f, fp = lax.cond(T9 <= 4., low_rate, high_rate, T9)

    expsigma = fp/f

    return f * jnp.exp(p * jnp.log(expsigma))

# t + p --> a + g, Caughlan-Fowler 1988
def tpag_frwrd_rate(T, p):
    
    T9 = T * 1e-9
    
    f = 2.2e4 * T9m23(T9) * jnp.exp(-3.869 / T913(T9)) * (
        1 + .108*T913(T9) + 1.68*T923(T9) + 1.26*T9 + .551*T943(T9)
        + 1.06*T953(T9)
    )

    expsigma = 1.2 

    return f * jnp.exp(p * jnp.log(expsigma))

# t + d --> a + n, Serpico et al 2004
def tdan_frwrd_rate(T, p):

    T9 = T * 1e-9
    
    def low_rate(T9):
    # T9 <= 2.5

        f = (
            6.2265733e8 / (jnp.exp(0.49711597/T9) * T9**0.56785403)
            + jnp.exp(-0.23309803*T9**2 - 1.342742*T9m13(T9)) 
            * T9m23(T9) * (
                -8.1144927e7 + 2.2315324e9*T9 - 2.9439669e9*T9**2 
                + 1.8764462e9*T9**3 - 6.0511612e8*T9**4 
                + 9.5196576e7*T9**5 - 5.2901086e6*T9**6
            )
        )
        
        fp = (
            6.200594e8 / (jnp.exp(0.49495969/T9) * T9**0.56078105) 
            + jnp.exp(-0.23797125*T9**2 - 1.3784792*T9m13(T9))
            * T9m23(T9) * (
                - 8.7018245e7 + 2.4114301e9*T9 
                - 3.2227206e9*T9**2 + 2.0779852e9*T9**3 
                - 6.7739586e8*T9**4 + 1.0762439e8*T9**5 - 6.0348254e6*T9**6
            )
        )

        return f, fp
        
    def high_rate(T9):
        
        f = 3.40249e8
        fp = 3.41798e8

        return f, fp

    f, fp = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)

    expsigma = 1. + jnp.sqrt(.0126**2 + 1.4 * (fp/f-1.)**2)

    return f * jnp.exp(p * jnp.log(expsigma))

# t + He4 --> Li7 + g, Serpico et al 2004
def taLi7g_frwrd_rate(T, p):

    T9 = T * 1e-9

    def low_rate(T9):
        # T9 <= 2.5 
        
        f = T9m12(T9) * (
            0.094614248 - 4.9273133*T9 + 99.358965*T9**2 
            - 989.81236*T9**3 + 4368.45*T9**4 
            + 931.93597*T9**5 - 391.07855*T9**6 + 159.23101*T9**7 
            - 34.407594*T9**8 + 3.3919004*T9**9 
            + 0.017556217*T9**10 - 0.036253427*T9**11 
            + 0.0031118827*T9**12 - 0.00008714468*T9**13
        ) / (jnp.exp(8.4e-7*T9) * (1. + 1.78616593*T9)**3)
        
        fp = T9m12(T9) * (
            0.083877015 - 4.5408918*T9 + 96.316095*T9**2 
            - 1016.5548*T9**3 + 4809.4834*T9**4 
            - 168.10236*T9**5 + 208.81839*T9**6 - 64.618239*T9**7 
            + 10.478926*T9**8 - 0.41782376*T9**9 
            - 0.06453532*T9**10 + 0.004777625*T9**11 
            + 0.00020027244*T9**12 - 0.000017864206*T9**13
        ) / (jnp.exp(9.3e-7*T9) * (1. + 1.60170507*T9)**3)

        return f, fp

    def high_rate(T9):
        
        f = 807.406
        fp = 916.513

        return f, fp
    
    f, fp = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)

    expsigma = 1. + jnp.sqrt(.0871**2 + (fp/f-1.)**2)

    return f * jnp.exp(p * jnp.log(expsigma))

# He3 + n --> t + p, Serpico et al 2004
def He3ntp_frwrd_rate(T, p):

    T9 = T * 1e-9

    def low_rate(T9):
    # T9 <= 2.5

        f = (
            7.064935e8 + 6.733213571736319e8*T9 
            + 1.7181155480346258e9*T9**2 - 4.5367658146835446e8*T9**3 
            - 1.2216728981712557e8*T9**4 - 4.92736677238425e8*T912(T9) 
            - 1.3659670893994067e9*T932(T9) - 6.629932739639357e8*T952(T9) 
            + 4.834951929033479e8*T972(T9)
        )

        df = jnp.sqrt(
            3.51e11 + 3.112097416989299e11*T9 
            + 7.901575411070865e10*T9**2 + 2.04541951561715e10*T9**3 
            + 5.110885965380451e9*T9**4 + 3.9016700171412725e9*T9**5 
            + 1.2106464640648174e9*T9**6 + 2.842691804858251e8*T9**7 
            + 2.5025023636054292e8*T9**8 - 1.0919522573895195e9*T9112(T9) 
            - 5.074476577064073e11*T912(T9) - 9.073561744271307e8*T9132(T9) 
            - 4.935780126698165e8*T9152(T9) - 1.3272119856586942e11*T932(T9) 
            - 3.982502921484235e10*T952(T9) - 1.4832025658250046e10*T972(T9) 
            - 3.9093487936349277e9*T992(T9)
        )

        return f, df
    
    def high_rate(T9): 
        
        f = 4.81732e8
        df = 224626.

        return f, df
        
    f, df = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)

    expsigma = 1. + jnp.sqrt(.00187**2 + 5.4*(df/f)**2)

    return f * jnp.exp(p * jnp.log(expsigma))

# He3 + d --> He4 + p, Serpico et al 2004
# this is way off.  You need to add another conditional to handle small temperatures
def He3dap_frwrd_rate(T, p):

    T9 = T * 1e-9
    
    def low_rate(T9):
    # T9 <= 2.5
        # exp1 = jnp.exp(1.6190981/T9)
        # if math.isinf(exp1):
        #     first_term_f = 0.
        # else:
        #     first_term_f = 3.1038385e8/(exp1*T9**0.12159455)
        first_term_f = (
            3.1038385e8 * jnp.exp(-1.6190981/T9) / T9**0.12159455 
        )
        
        f = first_term_f + jnp.exp(
            -0.0062340825*T9**2 - 1.4540617*T9m13(T9)
        ) * T9m23(T9) * (
            - 3.1335916e7 - 6.2051071e8*T9 
            - 1.8782248e9*T9**2 + 6.5642773e8*T9**3 
            + 1.530887e8*T9**4 - 4.9542138e8*T9103(T9) 
            - 1.770285e8*T9113(T9) + 1.14185e8*T913(T9) 
            - 2.516526e7*T9133(T9) + 1.7500204e8*T923(T9) 
            - 1.7513362e9*T943(T9) + 5.2792247e9*T953(T9) 
            - 3.32382e9*T973(T9) + 2.0346284e9*T983(T9)
        )
        
        # exp2 = np.exp(1.7895761/T9)
        # if math.isinf(exp2):
        #     first_term_fp = 0.
        # else:
        #     first_term_fp = 2.7540767e8/(exp2*T9**0.42535964)
        first_term_fp = (
            2.7540767e8 * jnp.exp(-1.7895761/T9) / T9**0.42535964
        )
        
        fp= first_term_fp + jnp.exp(
            -0.011584496*T9**2 - 1.7647266*T9m13(T9)
        ) * T9m23(T9) * (
            -4.0539244e7 - 6.8068775e8*T9 + 1.6755542e9*T9**2 
            + 1.3327241e9*T9**3 + 2.5284074e8*T9**4 
            - 8.0072489e8*T9103(T9) - 3.2332801e8*T9113(T9) 
            + 1.3990258e8*T913(T9) - 4.0197501e7*T9133(T9) 
            + 2.4121225e8*T923(T9) - 2.3960064e9*T943(T9) 
            + 5.3331297e9*T953(T9) - 7.7996883e9*T973(T9) 
            + 3.3487409e9*T983(T9)
        )

        return f, fp
        
    def high_rate(T9): 
        
        f = 1.55167e8
        fp = 1.55567e8

        return f, fp
    
    f, fp = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)

    expsigma = 1. + jnp.sqrt(.00299**2 + 3.8*(fp/f-1.)**2)

    return f * jnp.exp(p * jnp.log(expsigma))

# He3 + He4 --> Be7 + g, Serpico et al 2004
# one spot where rates flips sign, uncertainty gets large... check
def He3aBe7g_frwrd_rate(T, p):

    T9 = T * 1e-9
    
    def low_rate(T9):
    # T9 <= 2.5

        f= T9m12(T9) * (
            0.000046165644 - 0.00046036111*T9 
            - 0.021600946*T9**2 + 0.069627779*T9**3 
            + 7.346612*T9**4 - 95.123199*T9**5 
            + 391.13123*T9**6 - 187.23717*T9**7 
            + 86.111544*T9**8 - 21.630169*T9**9 + 3.6006922*T9**10 
            - 0.34322836*T9**11 + 0.018106742*T9**12 
            - 0.00035681506*T9**13
        ) / (jnp.exp(0.48102949*T9) * (1. + 1.17917554*T9)**3)

        fp = T9m12(T9) * (
            0.000050712746 - 0.00048202784*T9 - 0.023831596*T9**2 
            + 0.056033679*T9**3 + 8.408972*T9**4 - 106.22688*T9**5 
            + 434.78964*T9**6 - 238.48007*T9**7 
            + 94.757251*T9**8 - 23.705813*T9**9 + 3.8007127*T9**10 
            - 0.37029512*T9**11 + 0.019933598*T9**12 
            - 0.00045281691*T9**13
        ) / (jnp.exp(0.2282385*T9) * (1. + 1.31654256*T9)**3)

        return f, fp

    def high_rate(T9):

        f = 149.06
        fp = 150.371

        return f, fp

    f, fp = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)

    expsigma = 1. + jnp.sqrt(.048**2 + 2.1*(fp/f-1.)**2)

    return f * jnp.exp(p * jnp.log(expsigma))

# Be7 + n --> Li7 + p, Serpico et al 2004
def Be7nLi7p_frwrd_rate(T, p):

    T9 = T * 1e-9
    
    def low_rate(T9):
    # T9 <= 2.5

        f = (
            6.8423032e9 + 1.7674863e10*T9 + 2.6622006e9*T9**2 
            - 3.3561608e8*T9**3 - 5.9309139e6*T9**4 - 1.4987996e10*T912(T9) 
            - 1.0576906e10*T932(T9) + 2.7447598e8*T952(T9) 
            + 7.6425157e7*T972(T9) 
            - 2.282944e7*T9m32(T9) / jnp.exp(0.050351813 / T9)
        )
        
        fp = (
            6.8637241e9 + 1.7654706e10*T9 + 2.6528695e9*T9**2 
            - 3.334255e8*T9**3 - 5.8841835e6*T9**4 
            - 1.4998087e10*T912(T9) - 1.0549873e10*T932(T9) 
            + 2.7244147e8*T952(T9) + 7.5882824e7*T972(T9) 
            - 2.2946239e7*T9m32(T9) / jnp.exp(0.05042127 / T9)
        )

        return f, fp

    def high_rate(T9):
    
        f=1.28039e9
        fp=1.28652e9

        return f, fp
    
    f, fp = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)

    expsigma = 1. + jnp.sqrt(.02082**2 + 1.2*(fp/f - 1.)**2)

    return f * jnp.exp(p * jnp.log(expsigma))


#Li7 + p --> He4 + He4, Serpico et al 2004
# looks like there might be a mistake at low temperatures
def Li7paa_frwrd_rate(T, p):

    T9 = T * 1e-9
    
    def low_rate(T9):
    # T9 <= 2.5
    
        f = T9m23(T9) * (
            -8.9654123e7 - 2.5851582e8*T9 - 2.6831252e7*T9**2 
            + 3.8691673e8*T913(T9) + 4.9721269e8*T923(T9) 
            + 2.6444808e7*T943(T9) - 1.2946419e6*T953(T9) 
            - 1.0941088e8*T973(T9) + 9.9899564e7*T983(T9)
        ) / jnp.exp(7.73389632 * T9m13(T9))
        
        fp = T9m23(T9) * (
            1.6425644e7 - 7.682657e8*T9 + 1.2461811e9*T9**2 
            - 1.1914365e8*T913(T9) + 3.3659333e8*T923(T9) 
            + 1.8234158e9*T943(T9) - 1.9962683e9*T953(T9) 
            - 5.4978741e8*T973(T9) + 1.4214466e8*T983(T9)
        ) / jnp.exp(6.34172901 * T9m13(T9))

    # C-----Be8 resonance contribution to Li7(p,a)He4
        f += jnp.exp(-1.137519*T9**2 - 8.6256687*T9m13(T9)) * (
            3.0014189e7 - 1.8366119e8*T9 + 1.7688138e9*T9**2 
            - 8.4772261e9*T9**3 + 2.0237351e10*T9**4 
            - 1.9650068e10*T9**5 + 7.9452762e8*T9**6 
            + 1.3132468e10*T9**7 - 8.209351e9*T9**8 - 9.1099236e8*T9**9 
            + 2.7814079e9*T9**10 - 1.0785293e9*T9**11 
            + 1.3993392e8*T9**12
        ) * T9m23(T9)
        
        fp += jnp.exp(-1.0418442*T9**2 - 5.5570697*T9m13(T9)) * (
            -25145.507 + 1.0787318e6*T9 - 1.5899728e7*T9**2 
            + 1.7182625e8*T9**3 - 8.3103078e8*T9**4 + 2.1243451e9*T9**5 
            - 2.872313e9*T9**6 + 2.0104043e9*T9**7 - 4.3859588e8*T9**8 
            - 3.529339e8*T9**9 + 2.9815567e8*T9**10 
            - 8.8920729e7*T9**11 + 9.9850915e6*T9**12
        ) * T9m23(T9)

        return f, fp

    def high_rate(T9):
    
        f = 1.53403e6
        fp = 1.57087e6
        #C-----Be8 resonance contribution to Li7(p,a)He4
        f += 84516.7
        fp += 85552.6

        return f, fp
    
    f, fp = lax.cond(T9 <= 2.5, low_rate, high_rate, T9)
    
    expsigma = 1. + jnp.sqrt(.08**2 + (fp/f-1.)**2)

    return f * jnp.exp(p * jnp.log(expsigma))
